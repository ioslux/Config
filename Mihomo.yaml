#⚓️ 锚点区开始
# 锚点 - 远程订阅组
PProviders: &PProviders {type: http, interval: 86400, health-check: {enable: true, url: 'http://www.apple.com/library/test/success.html', interval: 300}, filter: '^(?!.*(群|邀请|返利|循环|官网|客服|网站|网址|获取|订阅|流量|到期|机场|下次|版本|官址|备用|过期|已用|联系|邮箱|工单|贩卖|通知|倒卖|防止|国内|地址|频道|无法|说明|使用|提示|特别|访问|支持|教程|关注|更新|作者|加入|USE|USED|TOTAL|EXPIRE|EMAIL|Panel|Channel|Author))'}
# 锚点 - 筛选组 
FilterHK: &FilterHK '^(?=.*((?i)🇭🇰|香港|港|(\b(HK|HKG|Hong Kong|HongKong|hongkong)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)(\d+)?\b))).*$'
FilterSG: &FilterSG '^(?=.*((?i)🇸🇬|新加坡|新国|狮|坡|狮城|(\b(SG|SGP|Singapore|SIN)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)(\d+)?\b))).*$'
FilterJP: &FilterJP '^(?=.*((?i)🇯🇵|日本|川日|东京|大阪|泉日|埼玉|沪日|深日|(\b(JP|JPN|Japan|Tokyo|NRT|KIX)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)(\d+)?\b))).*$'
FilterKR: &FilterKR '^(?=.*((?i)🇰🇷|韩国|韓|首尔|春川|韩|(\b(KR|KOR|Korea|Seoul|ICN)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)(\d+)?\b))).*$'
FilterUS: &FilterUS '^(?=.*((?i)🇺🇸|美|美国|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|(\b(US|USA|United States|America|ATL|BUF|DFW|EWR|IAD|LAX|MCI|MIA|ORD|PHX|PDX|SEA|SJC)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)(\d+)?\b))).*$'
FilterTW: &FilterTW '^(?=.*((?i)🇹🇼|🇨🇳|台湾|台北|台|新北|彰化|(\b(TW|TWN|Tai|Taiwan|TPE|KHH)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)(\d+)?\b))).*$'
FilterOther: &FilterOther '^(?=.*(.*))(?!.*((?i)🇭🇰|🇲🇴|🇹🇼|🇯🇵|🇰🇷|🇸🇬|🇺🇸|香港|港|澳门|台湾|台北|台|新北|彰化|日本|川日|东京|大阪|泉日|埼玉|沪日|深日|韩国|首尔|春川|韩|韓|新加坡|新国|狮|坡|狮城|美|美国|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|邀请|返利|循环|官网|运行|客服|网站|网址|获取|订阅|流量|到期|机场|下次|版本|官址|备用|到期|过期|已用|联系|邮箱|工单|群|贩卖|通知|倒卖|防止|国内|🎮|(\b(HK|hk|Hong Kong|HongKong|hongkong|HKG|MO|MAC|Oman|Macau|Macao|TW|Taiwan|TPE|KHH|JP|Japan|Tokyo|NRT|KIX|KR|Korea|KOR|Seoul|SG|SGP|Singapore|SIN|US|USA|United States|America|ATL|BUF|DFW|EWR|IAD|LAX|MCI|MIA|ORD|PHX|PDX|SEA|SJC|GAME|USE|USED|TOTAL|EXPIRE|EMAIL|Panel)\b|(\d{4}-\d{2}-\d{2}|\dG)))).*$'
FilterAll: &FilterAll '^(?!.*(直连|运行|群|邀请|返利|循环|官网|客服|网站|网址|获取|订阅|流量|到期|机场|下次|版本|官址|备用|过期|已用|联系|邮箱|工单|贩卖|通知|倒卖|防止|国内|地址|频道|无法|说明|使用|提示|特别|访问|支持|教程|关注|更新|作者|加入|USE|USED|TOTAL|EXPIRE|EMAIL|Panel|Channel|Author))'
# 锚点 - 策略组
UrlTest: &UrlTest {type: url-test, interval: 60, tolerance: 20, lazy: true, url: 'http://www.apple.com/library/test/success.html', disable-udp: false, timeout: 2000, max-failed-times: 3, hidden: true, include-all: true, proxies: [REJECT]}
FallBack: &FallBack {type: fallback, interval: 30, lazy: true, url: 'http://www.apple.com/library/test/success.html', disable-udp: false, timeout: 2000, max-failed-times: 3, hidden: false}
LoadBalanceCH: &LoadBalanceCH {type: load-balance, interval: 30, lazy: true, url: 'http://www.apple.com/library/test/success.html', disable-udp: false, strategy: consistent-hashing, timeout: 2000, max-failed-times: 3, hidden: true, include-all: true}
LoadBalanceCR: &LoadBalanceCR {type: load-balance, interval: 30, lazy: true, url: 'http://www.apple.com/library/test/success.html', disable-udp: false, strategy: round-robin, timeout: 2000, max-failed-times: 3, hidden: true, include-all: true}

# 锚点 - 选择组 
SelectFB: &SelectFB {type: select, proxies: [全球手动, 香港策略, 新国策略, 日本策略, 韩国策略, 美国策略, 台湾策略, 链式代理, DIRECT]}
SelectHK: &SelectHK {type: select, proxies: [香港策略, 新国策略, 日本策略, 韩国策略, 美国策略, 台湾策略, 全球手动, DIRECT]}
SelectSG: &SelectSG {type: select, proxies: [新国策略, 香港策略, 日本策略, 韩国策略, 美国策略, 台湾策略, 全球手动, DIRECT]}
SelectJP: &SelectJP {type: select, proxies: [日本策略, 美国策略, 香港策略, 新国策略, 韩国策略, 台湾策略, 全球手动, DIRECT]}
SelectUS: &SelectUS {type: select, proxies: [美国策略, 香港策略, 新国策略, 日本策略, 韩国策略, 台湾策略, 全球手动, DIRECT]}
SelectProxy: &SelectProxy {type: select, proxies: [默认代理, 香港策略, 新国策略, 日本策略, 韩国策略, 美国策略, 台湾策略, 全球手动, DIRECT]}
SelectDI: &SelectDI {type: select, proxies: [DIRECT, 默认代理, 香港策略, 新国策略, 日本策略, 韩国策略, 美国策略, 台湾策略]}
# 锚点 - 规则集 
DomainMrs: &DomainMrs {type: http, interval: 86400, behavior: domain, format: mrs}
DomainText: &DomainText {type: http, interval: 86400, behavior: domain, format: text}
domainYaml: &domainYaml {type: http, interval: 86400, behavior: domain, format: yaml}
IPcidrMrs: &IPcidrMrs {type: http, interval: 86400, behavior: ipcidr, format: mrs}
IPcidrText: &IPcidrText {type: http, interval: 86400, behavior: ipcidr, format: text}
ClassicalText: &ClassicalText {type: http, interval: 86400, behavior: classical, format: text}
ClassicalYaml: &ClassicalYaml {type: http, interval: 86400, behavior: classical, format: yaml}
############################################## - ⚓️ 锚点区结束 - ############################################## 

# 远程订阅组
# 注意：请提供您的机场订阅链接，每个链接一行，并为每个机场命名，末尾的[A]为每个节点添加机场名称前缀，可自定义
proxy-providers:
  机场A: {<<: *PProviders, url: '机场订阅地址', override: {additional-prefix: '[A] '}}
  机场B: {<<: *PProviders, url: '机场订阅地址', override: {additional-prefix: '[B] '}}


# 全局配置
mode: rule
port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
tproxy-port: 7895
ipv6: true
allow-lan: true
unified-delay: true
tcp-concurrent: true
log-level: warning
bind-address: "*"
find-process-mode: 'off'
global-client-fingerprint: chrome
keep-alive-interval: 15
keep-alive-idle: 600
#authentication:
 # - mihomo:ioslux
skip-auth-prefixes:
  - 192.168.1.0/24
  - 192.168.31.0/24
  - 192.168.100.0/24
  - 127.0.0.1/8
  
external-ui-url: https://github.com/Zephyruso/zashboard/releases/latest/download/dist.zip
external-ui-name: zashboard
external-ui: ui
external-controller: 0.0.0.0:9090
secret: ""

# 本地 DNS 解析配置
hosts:
  ntp.ntsc.ac.cn: 
    - 114.118.7.161
    - 114.118.7.163

profile:
  store-selected: true
  store-fake-ip: true
  
sniffer:
  enable: true # 是否启用 sniffer 侦测功能，默认关闭
  force-dns-mapping: true # 对 redir-host 类型识别的流量进行强制嗅探
  parse-pure-ip: true # 对所有未获取到域名的流量进行强制嗅探
  override-destination: false # 是否使用嗅探结果作为实际访问，默认为 true
  sniff:
    HTTP:
      ports: [80, 8080-8880] # 对 HTTP 流量进行嗅探的端口范围，常用于网站和应用
      override-destination: true # 覆盖目标地址以强制流量走代理或规则匹配
    TLS:
      ports: [443, 8443] # 对 HTTPS 流量的端口进行嗅探，通常用于加密连接
    QUIC:
      ports: [443, 8443] # 对 QUIC 协议的流量进行嗅探，QUI C 常用于改进 HTTPS 连接的速度
  force-domain:
    - +.v2ex.com # 对指定域名强制解析，即使 IP 地址已缓存或已知
  skip-domain:
    - Mijia.Cloud.com # 跳过指定域名，不对其进行嗅探处理（如智能家居流量）
  skip-src-address:
    - 192.168.0.3/32 # 跳过来源 IP 地址，不对其进行嗅探
  skip-dst-address:
    - 192.168.0.3/32 # 跳过目标 IP 地址，不对其进行嗅探

tun:
  enable: true # 启用 TUN 模式，用于透明代理
  stack: gvisor # 使用空间网络栈处理流量，可用值： system/gvisor/mixed
  auto-route: true # 自动设置全局路由，可以自动将全局流量路由进入 tun 网卡。
#  auto-redirect: true # 自动配置 iptables/nftables 以重定向 TCP 连接, 需要auto-route已启用, 需要root权限
  auto-detect-interface: true # 自动选择流量出口接口，多出口网卡同时连接的设备建议手动指定出口网卡
  dns-hijack:
    - any:53 # 劫持所有 53 端口的 DNS 请求
    - tcp://any:53
  device: utun0 # 指定 TUN 设备名称，默认为 utun
  mtu: 1500 # 设置最大传输单元 (MTU)，提高网络吞吐量
  strict-route: true # 启用 auto-route 时执行严格的路由规则
  gso: true # 通用分段卸载 (GSO)，提高网络性能
  gso-max-size: 65536 # 设置 GSO 最大分段大小为 65536 字节
  udp-timeout: 300 # 设置 UDP 超时时间为 300 秒，优化 NAT 映射
#  iproute2-table-index: 2022 # 使用指定的路由表索引 (iproute2)
#  iproute2-rule-index: 9000 # 设置路由规则的索引 (iproute2)
  endpoint-independent-nat: false # 启用独立于端点的 NAT，性能可能会略有下降，所以不建议在不需要的时候开启

    
dns:
  enable: true # 启用 DNS 模块
  cache-algorithm: arc # 缓存算法，参数:lru 最近最少使用，arc 自适应替换缓存
  prefer-h3: false # DOH 优先使用 http/3
  use-hosts: true # 使用配置中的 hosts 文件条目
  use-system-hosts: true # 使用系统的 hosts 文件条目
  respect-rules: true # dns 连接遵守路由规则，需配置 proxy-server-nameserver, 强烈不建议和 prefer-h3 一起使用
  listen: 0.0.0.0:1053 # 本地 DNS 监听端口，默认是 1053 端口
  ipv6: true # 启用 IPv6 DNS 解析，避免 IPv6 地址的解析请求
  default-nameserver:
    - quic://223.5.5.5 # 阿里 DNS 解析 DNS 域名
    - quic://223.6.6.6 # 阿里 DNS 解析 DNS 域名
  enhanced-mode: fake-ip # 启用增强模式 redir-host or fake-ip
  fake-ip-range: 198.18.0.0/16 # fake-ip 池设置
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - rule-set:connectivity-check
    - rule-set:private_domain
    - rule-set:cn_domain
    - +.miwifi.com
    - +.docker.io
    - +.market.xiaomi.com
    - +.push.apple.com
    - beiyong.dynuddns.net
    - dns.alidns.com
    - cloudflare-dns.com
    - dns.google
    - dns.adguard-dns.com
    - dns.nextdns.io
    - public.dns.iij.jp
    - dns0.eu
    - dns.18bit.cn
    - 2025.dns1.top
    - dns.ipv4dns.com
  nameserver-policy:
    "+.jp":
      - "https://public.dns.iij.jp/dns-query#h3=true" # IIJ （日本） DNS over H3
    "+.hk":
      - "quic://dns.nextdns.io" # NextDNS（香港） DNS over DOQ
    "+.eu":
      - "quic://dns0.eu" # 公共（欧洲） DNS over DOQ
    "RULE-SET:connectivity-check,private_domain,cn_domain":
      - "quic://dns.18bit.cn" # 18bit DNS over DOQ
      - "quic://dns.ipv4dns.com" # 清新云 DNS over DOQ
      - "quic://2025.dns1.top" # 关圣 DNS over DOQ
      - "quic://dns.alidns.com" # 阿里 DNS over DOQ
  nameserver:
    - "quic://dns.adguard-dns.com" # AdGuard DNS over DOQ
    - "https://cloudflare-dns.com/dns-query#h3=true" # Cloudflare DNS over H3
    - "https://dns.google/dns-query#h3=true" # Google DNS over H3
  proxy-server-nameserver: # 代理节点域名解析服务器，仅用于解析代理节点的域名
    - "quic://dns.alidns.com" # 阿里 DNS over DOQ
  direct-nameserver: #  用于直连出口域名解析的 DNS 服务器
    - "quic://dns.alidns.com" # 阿里 DNS over DOQ
  direct-nameserver-follow-policy: true # 是否遵循 nameserver-policy，默认为不遵守，仅当 direct-nameserver 不为空时生效


# 策略组 
proxy-groups:
  - {name: 默认代理,   <<: *SelectFB}
  - {name: 全球手动,   type: select, include-all: true, filter: *FilterAll}
  - {name: AI平台,    <<: *SelectUS}
  - {name: Emby,     <<: *SelectDI}
  - {name: TikTok,  <<: *SelectJP}
  - {name: NetFlix,  <<: *SelectProxy}
  - {name: Spotify,  <<: *SelectHK}
  - {name: 游戏平台,  <<: *SelectDI}
  - {name: 网速测试,  <<: *SelectDI}
  # 公司
  - {name: 微软服务,  <<: *SelectDI}
  - {name: 链式代理,  type: relay, proxies: [中转机, 落地机]}
  - {name: 中转机,    type: select, proxies: [全球手动, 香港策略, 台湾策略, 日本策略, 新国策略, 韩国策略, 美国策略]}
  - {name: 落地机,    type: select, include-all: true, filter: *FilterAll}

  # 地区策略
  - {name: 香港策略,  type: select, proxies: [香港自动], include-all: true, filter: *FilterHK}
  - {name: 新国策略,  type: select, proxies: [新国自动], include-all: true, filter: *FilterSG}
  - {name: 日本策略,  type: select, proxies: [日本自动], include-all: true, filter: *FilterJP}
  - {name: 韩国策略,  type: select, proxies: [韩国自动], include-all: true, filter: *FilterKR}
  - {name: 美国策略,  type: select, proxies: [美国自动], include-all: true, filter: *FilterUS}
  - {name: 台湾策略,  type: select, proxies: [台湾自动], include-all: true, filter: *FilterTW}
  - {name: 其他策略,  type: select, include-all: true, filter: *FilterOther}
  # 其他策略
  - {name: 抖快书定位, type: select, proxies: [DIRECT, 香港策略, 台湾策略, 新国策略, 日本策略, 韩国策略, 美国策略]}
  - {name: 漏网之鱼,   type: select, proxies: [默认代理, DIRECT]}
  # 自动测速
  - {name: 香港自动,        <<: *UrlTest, filter: *FilterHK}
  - {name: 台湾自动,        <<: *UrlTest, filter: *FilterTW}
  - {name: 新国自动,        <<: *UrlTest, filter: *FilterSG}
  - {name: 日本自动,        <<: *UrlTest, filter: *FilterJP}
  - {name: 韩国自动,        <<: *UrlTest, filter: *FilterKR}
  - {name: 美国自动,        <<: *UrlTest, filter: *FilterUS}
  # 负载均衡-散列
  - {name: 香港均衡-散列,   <<: *LoadBalanceCH, filter: *FilterHK}
  - {name: 台湾均衡-散列,   <<: *LoadBalanceCH, filter: *FilterTW}
  - {name: 新国均衡-散列,   <<: *LoadBalanceCH, filter: *FilterSG}
  - {name: 日本均衡-散列,   <<: *LoadBalanceCH, filter: *FilterJP}
  - {name: 韩国均衡-散列,   <<: *LoadBalanceCH, filter: *FilterKR}
  - {name: 美国均衡-散列,   <<: *LoadBalanceCH, filter: *FilterUS}
  # 负载均衡-轮询
  - {name: 香港均衡-轮询,   <<: *LoadBalanceCR, filter: *FilterHK}
  - {name: 台湾均衡-轮询,   <<: *LoadBalanceCR, filter: *FilterTW}
  - {name: 新国均衡-轮询,   <<: *LoadBalanceCR, filter: *FilterSG}
  - {name: 日本均衡-轮询,   <<: *LoadBalanceCR, filter: *FilterJP}
  - {name: 韩国均衡-轮询,   <<: *LoadBalanceCR, filter: *FilterKR}
  - {name: 美国均衡-轮询,   <<: *LoadBalanceCR, filter: *FilterUS}

# 远程规则集
rule-providers: 
  download:                  {<<: *ClassicalYaml, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/download.yaml}
  location_ip:               {<<: *ClassicalYaml, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/location_ip.yaml}
  XPTV:                      {<<: *ClassicalYaml, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/XPTV.yaml}
  fix-direct:                {<<: *ClassicalYaml, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/fix-direct.yaml}
  Line:                      {<<: *ClassicalYaml, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/Line.yaml}
  speedtest:                 {<<: *ClassicalYaml, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/speedtest.yaml}
  emby:                      {<<: *ClassicalText, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/emby.list}
  openai:                    {<<: *DomainMrs, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/openai.mrs}
  telegram:                  {<<: *DomainMrs, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/telegram.mrs}
  twitter:                   {<<: *DomainMrs, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/twitter.mrs}
  instagram:                 {<<: *DomainMrs, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/instagram.mrs}
  youtube:                   {<<: *DomainMrs, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/youtube.mrs}
  spotify:                   {<<: *DomainMrs, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/spotify.mrs}
  netflix:                   {<<: *DomainMrs, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/netflix.mrs}
  disney:                    {<<: *DomainMrs, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/disney.mrs}
  hbo:                       {<<: *DomainMrs, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/hbo.mrs}
  tiktok:                    {<<: *DomainMrs, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/tiktok.mrs}
  github:                    {<<: *DomainMrs, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/github.mrs}
  onedrive:                  {<<: *DomainMrs, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/onedrive.mrs}
  microsoft:                 {<<: *DomainMrs, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/microsoft.mrs}
  facebook:                  {<<: *DomainMrs, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/facebook.mrs}
  meta:                      {<<: *DomainMrs, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/meta.mrs}
  google:                    {<<: *DomainMrs, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/google.mrs}
  apple-cn:                  {<<: *DomainMrs, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/apple-cn.mrs}
  apple:                     {<<: *DomainMrs, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/apple.mrs}
  paypal@cn:                 {<<: *DomainMrs, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/paypal@cn.mrs}
  paypal:                    {<<: *DomainMrs, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/paypal.mrs}
  cloudflare-cn:             {<<: *DomainMrs, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/cloudflare-cn.mrs}
  category-public-tracker:   {<<: *DomainMrs, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/category-public-tracker.mrs}
  category-games:            {<<: *DomainMrs, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/category-games.mrs}
  category-social-media-!cn: {<<: *DomainMrs, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/category-social-media-!cn.mrs}
  category-ai-!cn:           {<<: *DomainMrs, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/category-ai-!cn.mrs}
  geolocation-!cn:           {<<: *DomainMrs, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/geolocation-!cn.mrs}
  connectivity-check:        {<<: *DomainMrs, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/connectivity-check.mrs}
  private_domain:            {<<: *DomainMrs, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/private.mrs}
  cn_domain:                 {<<: *DomainMrs, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/cn.mrs}
  # IP规则集
  facebook_ip:               {<<: *IPcidrMrs, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/facebook_ip.mrs}
  google_ip:                 {<<: *IPcidrMrs, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/google_ip.mrs}
  netflix_ip:                {<<: *IPcidrMrs, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/netflix_ip.mrs}
  twitter_ip:                {<<: *IPcidrMrs, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/twitter_ip.mrs}
  telegram_ip:               {<<: *IPcidrMrs, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/telegram_ip.mrs}
  private_ip:                {<<: *IPcidrMrs, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/private_ip.mrs}
  cn_ip:                     {<<: *IPcidrMrs, url: https://github.com/666OS/YYDS/raw/main/mihomo/rules/cn_ip.mrs}

  # 泄露拦截
  BlockHttpDNS:                     {<<: *DomainMrs, url: https://raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/BlockHttpDNS/BlockHttpDNS_OCD_Domain.mrs}
  BlockHttpDNScidr:                     {<<: *IPcidrMrs, url: https://raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/BlockHttpDNS/BlockHttpDNS_OCD_IP.mrs}
  STUN:                     {<<: *DomainMrs, url: https://cdn.jsdmirror.com/gh/Kwisma/rules@main/rules/mihomo/STUN/STUN_Domain.mrs}
# 路由
rules:
  # 常用必备
  - DST-PORT,123,DIRECT
  - DOMAIN-KEYWORD,libvio,DIRECT
  - DOMAIN-SUFFIX,imee.me,DIRECT
  - DST-PORT,3478,REJECT
  - DOMAIN-KEYWORD,stun,REJECT
  - DOMAIN-KEYWORD,httpdns,REJECT
  - AND,((NETWORK,UDP),(DST-PORT,19302)),REJECT
  - AND,((NETWORK,UDP),(DST-PORT,5351)),REJECT
  - AND,((NETWORK,UDP),(DST-PORT,5350)),REJECT
  - AND,((NETWORK,TCP),(DST-PORT,5349)),REJECT
  # 防御
  - RULE-SET,category-public-tracker,REJECT-DROP
  - RULE-SET,BlockHttpDNS,REJECT
  - RULE-SET,BlockHttpDNScidr,REJECT
  - RULE-SET,STUN,REJECT
  # 域名路由
  - RULE-SET,fix-direct,DIRECT
  - RULE-SET,XPTV,DIRECT
  - RULE-SET,location_ip,抖快书定位
  - RULE-SET,speedtest,网速测试
  - RULE-SET,openai,AI平台
  - RULE-SET,category-ai-!cn,AI平台
  - RULE-SET,telegram,默认代理
  - RULE-SET,twitter,默认代理
  - RULE-SET,emby,Emby
  - RULE-SET,youtube,默认代理
  - RULE-SET,spotify,Spotify
  - RULE-SET,netflix,NetFlix
  - RULE-SET,disney,默认代理
  - RULE-SET,hbo,默认代理
  - RULE-SET,tiktok,TikTok
  - RULE-SET,github,默认代理
  - RULE-SET,onedrive,默认代理
  - RULE-SET,microsoft,微软服务
  - RULE-SET,instagram,默认代理
  - RULE-SET,facebook,默认代理
  - RULE-SET,meta,默认代理
  - RULE-SET,google,默认代理
  - RULE-SET,apple-cn,DIRECT
  - RULE-SET,apple,DIRECT
  - RULE-SET,paypal@cn,DIRECT
  - RULE-SET,paypal,DIRECT
  - RULE-SET,cloudflare-cn,DIRECT
  - RULE-SET,category-games,游戏平台
  - RULE-SET,Line,默认代理
  - RULE-SET,category-social-media-!cn,默认代理
  - RULE-SET,download,DIRECT
  - RULE-SET,cn_domain,DIRECT
  - RULE-SET,geolocation-!cn,默认代理
  # IP路由
  - RULE-SET,private_ip,DIRECT,no-resolve
  - RULE-SET,facebook_ip,默认代理,no-resolve
  - RULE-SET,google_ip,默认代理,no-resolve
  - RULE-SET,netflix_ip,NetFlix,no-resolve
  - RULE-SET,twitter_ip,默认代理,no-resolve
  - RULE-SET,telegram_ip,默认代理,no-resolve
  - RULE-SET,cn_ip,DIRECT,no-resolve
  - MATCH,漏网之鱼
